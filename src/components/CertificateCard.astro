---
import Book from "./icons/Book.astro";

const { img, label, institution } = Astro.props;
const uniqueId = `cert-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="certificate-card-wrapper">
  <button 
    type="button"
    data-modal-id={uniqueId}
    class="certificate-card group relative flex flex-col overflow-hidden rounded-xl border border-gray-700/50 bg-gray-900/40 backdrop-blur-sm transition-all duration-300 hover:border-yellow-500/50 hover:bg-gray-800/50 hover:shadow-2xl hover:shadow-yellow-500/20 hover:-translate-y-2 w-[320px] cursor-pointer text-left"
  >
    <!-- Imagen del certificado -->
    <div class="relative overflow-hidden">
      <img 
        src={img} 
        class="object-cover w-full h-[180px] transition-transform duration-500 group-hover:scale-110" 
        alt={label}
        loading="lazy"
      />
      <!-- Overlay gradient -->
      <div class="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/40 to-transparent opacity-60 group-hover:opacity-40 transition-opacity duration-300"></div>
      
      <!-- Icono flotante -->
      <div class="absolute top-3 right-3 bg-yellow-500/20 backdrop-blur-md rounded-full p-2 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0">
        <Book class="size-5 text-yellow-400" />
      </div>
    </div>

    <!-- Contenido de texto -->
    <div class="p-5 flex-1 flex flex-col justify-between min-h-[140px]">
      <div>
        <h3 class="text-base font-semibold text-white/90 group-hover:text-white transition-colors duration-300 leading-snug mb-2">
          {label}
        </h3>
        <p class="text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300">
          {institution}
        </p>
      </div>
      
      <!-- Indicador de acción -->
      <div class="flex items-center gap-2 mt-3 text-sm text-yellow-400 font-medium">
        <span class="group-hover:translate-x-1 transition-transform duration-300">Ver certificado</span>
        <svg class="size-4 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
        </svg>
      </div>
    </div>

    <!-- Brillo sutil en hover -->
    <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none">
      <div class="absolute inset-0 bg-gradient-to-br from-yellow-500/5 via-transparent to-yellow-600/5"></div>
    </div>
  </button>

  <!-- Modal -->
  <div 
    id={uniqueId}
    class="certificate-modal fixed inset-0 bg-black/95 backdrop-blur-md z-50 hidden items-center justify-center p-4 animate-fade-in"
  >
    <div class="relative max-w-3xl w-full max-h-[80vh] flex items-center justify-center">
      <!-- Botón cerrar -->
      <button 
        type="button"
        class="modal-close absolute -top-2 -right-2 z-10 bg-yellow-500/90 hover:bg-yellow-400 text-gray-900 rounded-full p-3 transition-all duration-300 hover:scale-110 hover:rotate-90 shadow-lg"
        aria-label="Cerrar modal"
      >
        <svg class="size-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>

      <!-- Imagen grande -->
      <img 
        src={img}
        alt={label}
        class="max-w-full max-h-full object-contain rounded-lg shadow-2xl shadow-yellow-500/20 animate-scale-in"
      />
    </div>
  </div>
</div>

<style>
  .animate-fade-in {
    animation: fadeIn 0.3s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    // Abrir modal
    const cards = document.querySelectorAll('.certificate-card');
    cards.forEach(card => {
      card.addEventListener('click', (e) => {
        const modalId = card.getAttribute('data-modal-id');
        const modal = document.getElementById(modalId!);
        if (modal) {
          modal.classList.remove('hidden');
          modal.classList.add('flex');
          document.body.style.overflow = 'hidden';
        }
      });
    });

    // Cerrar modal
    const closeButtons = document.querySelectorAll('.modal-close');
    closeButtons.forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.stopPropagation();
        const modal = btn.closest('.certificate-modal');
        if (modal) {
          modal.classList.add('hidden');
          modal.classList.remove('flex');
          document.body.style.overflow = '';
        }
      });
    });

    // Cerrar modal al hacer clic fuera de la imagen
    const modals = document.querySelectorAll('.certificate-modal');
    modals.forEach(modal => {
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.classList.add('hidden');
          modal.classList.remove('flex');
          document.body.style.overflow = '';
        }
      });
    });

    // Cerrar modal con tecla ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        const openModal = document.querySelector('.certificate-modal.flex');
        if (openModal) {
          openModal.classList.add('hidden');
          openModal.classList.remove('flex');
          document.body.style.overflow = '';
        }
      }
    });
  });
</script>